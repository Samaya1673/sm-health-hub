import React, { useState, useEffect } from 'react';
import { Bot, User, Stethoscope, UtensilsCrossed, Dumbbell, Newspaper, Lightbulb, ChefHat, HeartPulse, BrainCircuit } from 'lucide-react';

// Main App Component
const App = () => {
  const [currentPage, setCurrentPage] = useState('home');

  const navigateTo = (page) => {
    setCurrentPage(page);
  };

  const PageContent = () => {
    switch (currentPage) {
      case 'habits':
        return <HealthyHabitsPage />;
      case 'cooking':
        return <HealthyCookingPage />;
      case 'activities':
        return <HealthyActivitiesPage />;
      case 'news':
        return <HealthNewsPage />;
      default:
        return <HomePage navigateTo={navigateTo} />;
    }
  };

  return (
    <div className="bg-slate-50 min-h-screen font-sans text-slate-800">
      <Header navigateTo={navigateTo} />
      <main className="p-4 md:p-8">
        <PageContent />
      </main>
      <Footer />
    </div>
  );
};

// Header Component
const Header = ({ navigateTo }) => (
  <header className="bg-white shadow-md">
    <nav className="container mx-auto px-6 py-4 flex justify-between items-center">
      <div className="flex items-center space-x-2 cursor-pointer" onClick={() => navigateTo('home')}>
        <HeartPulse className="text-teal-500" size={32} />
        <h1 className="text-2xl font-bold text-slate-800">Health Hub</h1>
      </div>
      <div className="hidden md:flex items-center space-x-6">
        <NavItem navigateTo={navigateTo} page="home" label="Home" />
        <NavItem navigateTo={navigateTo} page="habits" label="Habits" />
        <NavItem navigateTo={navigateTo} page="cooking" label="Cooking" />
        <NavItem navigateTo={navigateTo} page="activities" label="Activities" />
        <NavItem navigateTo={navigateTo} page="news" label="News" />
      </div>
       <div className="md:hidden">
         <select onChange={(e) => navigateTo(e.target.value)} className="bg-white border border-slate-300 rounded-md p-2 text-slate-700">
            <option value="home">Home</option>
            <option value="habits">Habits</option>
            <option value="cooking">Cooking</option>
            <option value="activities">Activities</option>
            <option value="news">News</option>
        </select>
      </div>
    </nav>
  </header>
);

// Navigation Item Component
const NavItem = ({ navigateTo, page, label }) => (
  <button onClick={() => navigateTo(page)} className="text-slate-600 hover:text-teal-500 transition-colors duration-300 font-medium">
    {label}
  </button>
);

// Home Page Component
const HomePage = ({ navigateTo }) => (
    <div className="container mx-auto text-center py-12 md:py-24">
        <h2 className="text-4xl md:text-6xl font-extrabold text-slate-800 mb-4 animate-fade-in-down">Your Personal Health Companion</h2>
        <p className="text-lg md:text-xl text-slate-600 max-w-3xl mx-auto mb-12 animate-fade-in-up">
            Discover a healthier you. Explore topics, get personalized advice from our AI assistants, and build a better lifestyle.
        </p>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            <HomePageCard 
                icon={<Stethoscope size={48} className="text-teal-500" />} 
                title="Healthy Habits" 
                description="Understand your body and build lasting healthy routines. Check symptoms with our AI." 
                onClick={() => navigateTo('habits')}
            />
            <HomePageCard 
                icon={<UtensilsCrossed size={48} className="text-teal-500" />} 
                title="Healthy Cooking" 
                description="Find delicious and nutritious recipes tailored to your needs. Let our AI be your chef." 
                onClick={() => navigateTo('cooking')}
            />
            <HomePageCard 
                icon={<Dumbbell size={48} className="text-teal-500" />} 
                title="Healthy Activities" 
                description="Get moving with custom workout plans generated by our AI fitness coach." 
                onClick={() => navigateTo('activities')}
            />
            <HomePageCard 
                icon={<Newspaper size={48} className="text-teal-500" />} 
                title="Health News & Facts" 
                description="Stay informed with the latest in health and discover fun facts with our AI." 
                onClick={() => navigateTo('news')}
            />
        </div>
    </div>
);

// Home Page Card Component
const HomePageCard = ({ icon, title, description, onClick }) => (
    <div 
        className="bg-white p-8 rounded-xl shadow-lg hover:shadow-2xl transform hover:-translate-y-2 transition-all duration-300 cursor-pointer flex flex-col items-center"
        onClick={onClick}
    >
        <div className="mb-4">{icon}</div>
        <h3 className="text-2xl font-bold text-slate-800 mb-2">{title}</h3>
        <p className="text-slate-600">{description}</p>
    </div>
);


// Generic Page Layout Component
const PageLayout = ({ icon, title, subtitle, children }) => (
    <div className="container mx-auto animate-fade-in">
      <div className="flex items-center space-x-4 mb-8">
        <div className="bg-teal-100 p-4 rounded-full">
            {icon}
        </div>
        <div>
            <h2 className="text-3xl md:text-4xl font-bold text-slate-800">{title}</h2>
            <p className="text-lg text-slate-600">{subtitle}</p>
        </div>
      </div>
      <div className="grid grid-cols-1 lg:grid-cols-5 gap-8">
        {children}
      </div>
    </div>
);

// Content Card Component
const ContentCard = ({ title, children }) => (
    <div className="bg-white p-6 rounded-lg shadow-md">
        <h3 className="text-2xl font-bold text-slate-700 mb-4">{title}</h3>
        <div className="space-y-3 text-slate-600">
            {children}
        </div>
    </div>
);

// AI Chatbot Component
const Chatbot = ({ botName, persona, placeholder, icon }) => {
    const [input, setInput] = useState('');
    const [messages, setMessages] = useState([]);
    const [isLoading, setIsLoading] = useState(false);

    const handleSendMessage = async (e) => {
        e.preventDefault();
        if (!input.trim() || isLoading) return;

        const userMessage = { text: input, sender: 'user' };
        setMessages(prev => [...prev, userMessage]);
        setInput('');
        setIsLoading(true);

        try {
            const prompt = `${persona}\n\nUser request: "${input}"\n\nResponse:`;
            let chatHistory = [{ role: "user", parts: [{ text: prompt }] }];
            const payload = { contents: chatHistory };
            
            // This line is updated to securely read the API key from Vercel's environment variables.
            const apiKey = process.env.REACT_APP_GEMINI_API_KEY; 
            
            const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;

            const response = await fetch(apiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
            });

            if (!response.ok) {
                throw new Error(`API request failed with status ${response.status}`);
            }

            const result = await response.json();

            let botResponseText = "Sorry, I couldn't generate a response. Please try again.";
            if (result.candidates && result.candidates.length > 0 &&
                result.candidates[0].content && result.candidates[0].content.parts &&
                result.candidates[0].content.parts.length > 0) {
              botResponseText = result.candidates[0].content.parts[0].text;
            }
            
            const botMessage = { text: botResponseText, sender: 'bot' };
            setMessages(prev => [...prev, botMessage]);

        } catch (error) {
            console.error("Error calling Gemini API:", error);
            const errorMessage = { text: "There was an error connecting to the AI. Please check your API key and try again.", sender: 'bot' };
            setMessages(prev => [...prev, errorMessage]);
        } finally {
            setIsLoading(false);
        }
    };

    return (
        <div className="bg-white rounded-lg shadow-xl flex flex-col h-full lg:col-span-2">
            <div className="bg-teal-500 p-4 rounded-t-lg flex items-center space-x-3">
                {icon}
                <h3 className="text-xl font-bold text-white">{botName}</h3>
            </div>
            <div className="flex-grow p-4 overflow-y-auto h-96">
                <div className="space-y-4">
                    {messages.map((msg, index) => (
                        <div key={index} className={`flex items-start gap-3 ${msg.sender === 'user' ? 'justify-end' : ''}`}>
                           {msg.sender === 'bot' && <Bot className="text-teal-500 flex-shrink-0" />}
                           <div className={`rounded-lg p-3 max-w-xs md:max-w-md ${msg.sender === 'user' ? 'bg-blue-100 text-slate-800' : 'bg-slate-100 text-slate-700'}`}>
                              <p className="text-sm" dangerouslySetInnerHTML={{ __html: msg.text.replace(/\n/g, '<br />') }}></p>
                           </div>
                           {msg.sender === 'user' && <User className="text-blue-500 flex-shrink-0" />}
                        </div>
                    ))}
                    {isLoading && (
                        <div className="flex items-center gap-3">
                           <Bot className="text-teal-500" />
                           <div className="bg-slate-100 p-3 rounded-lg">
                               <div className="flex space-x-1">
                                   <div className="w-2 h-2 bg-teal-400 rounded-full animate-pulse [animation-delay:-0.3s]"></div>
                                   <div className="w-2 h-2 bg-teal-400 rounded-full animate-pulse [animation-delay:-0.15s]"></div>
                                   <div className="w-2 h-2 bg-teal-400 rounded-full animate-pulse"></div>
                               </div>
                           </div>
                       </div>
                    )}
                </div>
            </div>
            <form onSubmit={handleSendMessage} className="p-4 border-t border-slate-200 bg-white rounded-b-lg">
                <div className="flex items-center">
                    <input
                        type="text"
                        value={input}
                        onChange={(e) => setInput(e.target.value)}
                        placeholder={placeholder}
                        className="flex-grow p-2 border border-slate-300 rounded-l-md focus:outline-none focus:ring-2 focus:ring-teal-400"
                        disabled={isLoading}
                    />
                    <button type="submit" className="bg-teal-500 text-white p-2 rounded-r-md hover:bg-teal-600 disabled:bg-teal-300" disabled={isLoading}>
                        Send
                    </button>
                </div>
            </form>
        </div>
    );
};


// Healthy Habits Page Component
const HealthyHabitsPage = () => (
    <PageLayout icon={<Stethoscope size={32} className="text-teal-600"/>} title="Healthy Habits" subtitle="Build a foundation for lifelong wellness.">
        <div className="lg:col-span-3 space-y-6">
            <ContentCard title="The Power of Consistency">
                <p>Small, daily actions compound over time to create significant health improvements. Focus on one or two new habits at a time, like drinking a glass of water every morning or taking a 10-minute walk after dinner.</p>
            </ContentCard>
            <ContentCard title="Mindful Practices">
                <p>Incorporate mindfulness to reduce stress and improve mental clarity. This can be as simple as 5 minutes of deep breathing, meditation, or journaling your thoughts before bed. Mental health is a crucial part of your overall well-being.</p>
            </ContentCard>
            <ContentCard title="Sleep: The Ultimate Reset">
                <p>Aim for 7-9 hours of quality sleep per night. It's essential for physical recovery, cognitive function, and emotional regulation. Create a relaxing bedtime routine to signal to your body it's time to wind down.</p>
            </ContentCard>
        </div>
        <Chatbot 
            botName="Symptom Checker AI"
            persona="You are a helpful AI assistant for preliminary symptom analysis. You are not a doctor. Provide potential connections between symptoms and general health conditions, but ALWAYS strongly advise the user to consult a healthcare professional for a real diagnosis. Do not provide definitive diagnoses."
            placeholder="Describe your symptoms..."
            icon={<BrainCircuit className="text-white" />}
        />
    </PageLayout>
);

// Healthy Cooking Page Component
const HealthyCookingPage = () => (
    <PageLayout icon={<UtensilsCrossed size={32} className="text-teal-600"/>} title="Healthy Cooking" subtitle="Nourish your body from the inside out.">
        <div className="lg:col-span-3 space-y-6">
            <ContentCard title="Eat the Rainbow">
                <p>A colorful plate is a healthy plate. Fruits and vegetables of different colors provide a wide range of vitamins, minerals, and antioxidants. Aim for at least 5 servings a day.</p>
            </ContentCard>
            <ContentCard title="Lean Proteins & Healthy Fats">
                <p>Incorporate lean protein sources like chicken, fish, beans, and lentils. Healthy fats from avocados, nuts, seeds, and olive oil are vital for brain health and reducing inflammation.</p>
            </ContentCard>
            <ContentCard title="Smart Hydration">
                <p>Water is key. It aids digestion, transports nutrients, and regulates body temperature. Limit sugary drinks and opt for water, herbal teas, or infused water for flavor.</p>
            </ContentCard>
        </div>
        <Chatbot 
            botName="Recipe Generator AI"
            persona="You are a creative and helpful AI chef. Generate a healthy, easy-to-follow recipe based on the user's request. Include ingredients, step-by-step instructions, and a fun nutritional fact about one of the ingredients."
            placeholder="e.g., 'A quick vegan lunch'"
            icon={<ChefHat className="text-white" />}
        />
    </PageLayout>
);

// Healthy Activities Page Component
const HealthyActivitiesPage = () => (
    <PageLayout icon={<Dumbbell size={32} className="text-teal-600"/>} title="Healthy Activities" subtitle="Move your body, boost your mood.">
        <div className="lg:col-span-3 space-y-6">
            <ContentCard title="Find What You Love">
                <p>The best exercise is the one you'll stick with. Explore different activities like dancing, hiking, swimming, or team sports. Movement should be enjoyable, not a chore.</p>
            </ContentCard>
            <ContentCard title="Mix It Up: Cardio & Strength">
                <p>A balanced routine includes both cardiovascular exercise (for heart health) and strength training (for muscle and bone health). Aim for 150 minutes of moderate cardio or 75 minutes of vigorous cardio per week, plus two strength training sessions.</p>
            </ContentCard>
             <ContentCard title="Active Lifestyle">
                <p>Incorporate more movement into your daily life. Take the stairs instead of the elevator, walk or bike for short errands, and take stretching breaks if you have a desk job. Every little bit counts!</p>
            </ContentCard>
        </div>
        <Chatbot 
            botName="Workout Planner AI"
            persona="You are an encouraging and knowledgeable AI fitness coach. Based on the user's request, create a simple, effective workout plan. Specify exercises, sets, reps, and rest periods. Include a motivational tip."
            placeholder="e.g., '20-min at-home cardio'"
            icon={<HeartPulse className="text-white" />}
        />
    </PageLayout>
);

// Health News Page Component
const HealthNewsPage = () => (
    <PageLayout icon={<Newspaper size={32} className="text-teal-600"/>} title="Health News & Facts" subtitle="Stay informed and inspired.">
        <div className="lg:col-span-3 space-y-6">
            <ContentCard title="How to Read Health News">
                <p>Be a critical reader. Look for studies published in reputable peer-reviewed journals. Be wary of sensational headlines and consider the source of the information. Correlation does not equal causation.</p>
            </ContentCard>
            <ContentCard title="Recent Trends">
                <p>Topics like gut health and its connection to the brain, the benefits of personalized nutrition, and the impact of wearable technology on health tracking are currently at the forefront of wellness research.</p>
            </ContentCard>
            <ContentCard title="Consult Professionals">
                <p>While staying informed is great, always consult with healthcare professionals for advice tailored to your personal health situation before making any significant changes to your lifestyle based on news articles.</p>
            </ContentCard>
        </div>
        <Chatbot 
            botName="Health Facts AI"
            persona="You are a fun and knowledgeable AI assistant. When the user asks for a fact, provide a surprising and interesting health or science fact that is easy to understand. Keep it concise and engaging."
            placeholder="Ask for a fun health fact!"
            icon={<Lightbulb className="text-white" />}
        />
    </PageLayout>
);


// Footer Component
const Footer = () => (
    <footer className="bg-white mt-12 py-6 border-t">
        <div className="container mx-auto text-center text-slate-500">
            <p>&copy; 2024 Health Hub. All Rights Reserved.</p>
            <p className="text-sm mt-2">Disclaimer: This website provides information and AI-driven suggestions. It is not a substitute for professional medical advice, diagnosis, or treatment.</p>
        </div>
    </footer>
);

export default App;
